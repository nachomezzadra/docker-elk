input {
	tcp {
		type => "dss"
		port => 5000
	}

	tcp {
		type => "geo"
		port => 6000
	}

    file {
    	type => "geo"
        path => "/Users/nacho/workspace/GeoIPCity-534-Location.csv"
        start_position => beginning
    }

}

## Add your filters here

filter {

	if [type] == "dss" {
		grok {
			match => [ "message", ", Node Name: %{DATA:nodeName}, Node Type: %{DATA:nodeType}, Destination: %{DATA:destination}, Timestamp: %{TIMESTAMP_ISO8601:localTimestamp}, Sequence Number: %{INT:sequenceNumber}, UCID: %{WORD:UCID}, DNIS: %{WORD:DNIS}, Primary ANI: %{WORD:ANI}" ]

			match => [ "ANI", "^(\+? ?(?!9?\d{0}))?(\(?0?(?<areaCode>\d{3})\)? ?)" ]

			break_on_match => false
		}
    }


    if [type] == "geo" {
		csv {
		    columns => ["locId","country","region","city","postalCode","latitude","longitude","metroCode","areaCode"]
		    separator => ","
		}

		if [id] == "locId" {
		  drop { }
		} else {
			mutate {
		      convert => { "longitude" => "float" }
		      convert => { "latitude" => "float" }
		    }

		    mutate {
		      rename => {
		        "longitude" => "[location][lon]" 
		        "latitude" => "[location][lat]" 
		      }
		    }
		}
    }
}


# , Node Name: Pharmacy Transfer, Node Type: AGENT_QUEUE, Destination: AN_Pharmacy, Timestamp: 2015-10-07T14:59:53-0600, Sequence Number: 3, UCID: 00002004191444251429, Primary ANI: 18028254572
# area code es:  ^(\+?(?<country>\d{1,3}?) ?(?!9?\d{4}))?(\(?0?(?<area>\d{2})\)? ?)?(?<phone>9?\d{4}[-. ]?\d{4})$


output {
	elasticsearch { 
		  #index => "dss-%{+YYYY.MM.dd}"
	}

   # stdout {
   #      codec => rubydebug      
   #  }	
}
